{"version":3,"file":"static/js/830.6d670ef7.chunk.js","mappings":"mPAGaA,EAAYC,EAAAA,EAAAA,IAAH,+XAqBTC,EAAOD,EAAAA,EAAAA,EAAH,kLAUJE,EAAQF,EAAAA,EAAAA,GAAH,kLAULG,GAAUH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,wf,UCzCPK,EAAU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC/B,OACE,+BACE,UAACR,EAAD,WACGO,IAAS,SAACJ,EAAD,UAAQI,IACjBC,IAAW,SAACN,EAAD,UAAOM,KACnB,SAACJ,EAAD,CAASK,GAAG,WAAZ,SAAuB,6BAI9B,E,oBCJc,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACV,GAAE,CAACH,IAEJ,IAIII,EAJEC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKG,KAAf,IACxBC,GAAYH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKI,SAAf,IAC7BC,GAAYJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMG,UAAUF,KAApB,IAKnC,OAFAJ,EAAaC,EAAKM,QAAO,SAAAC,GAAG,OAAIF,EAAUG,SAASD,EAAIE,GAA3B,KAG1B,UAAC,KAAD,WACGL,IAAa,SAACM,EAAA,EAAD,IAES,IAAtBX,EAAWY,SAAgB,SAACC,EAAA,EAAD,CAAUZ,KAAMD,IAErB,IAAtBA,EAAWY,SAAiBP,IAC3B,SAACd,EAAD,CACEC,MAAM,mBACNC,QAAQ,wDAKjB,C","sources":["components/Message/Message.styled.jsx","components/Message/Message.jsx","pages/Favorites/Favorites.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 375px;\n  padding: 20px 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 20px 95px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n    padding: 20px 128px;\n  }\n`;\n\nexport const Text = styled.p`\n  color: #3470ff;\n  font-family: Manrope;\n  font-size: 25px;\n  font-weight: bold;\n  font-style: normal;\n  line-height: 24px;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  color: #3470ff;\n  font-family: Manrope;\n  font-size: 25px;\n  font-weight: bold;\n  font-style: normal;\n  line-height: 24px;\n  text-align: center;\n`;\n\nexport const Catalog = styled(Link)`\n  display: flex;\n  padding: 12px 12px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  border-radius: 12px;\n  background-color: #3470ff;\n  color: #ffffff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.42857;\n  text-decoration: none;\n  transition: background-color 250ms linear, transform 250ms linear;\n\n  &:hover {\n    background-color: #0b44cd;\n    transform: scale(1.05);\n  }\n`;","import React from 'react';\nimport { Container, Text, Catalog, Title } from './Message.styled';\n\nexport const Message = ({ title, content }) => {\n  return (\n    <>\n      <Container>\n        {title && <Title>{title}</Title>}\n        {content && <Text>{content}</Text>}\n        <Catalog to=\"/catalog\">Choose favorite cars</Catalog>\n      </Container>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { CarsList } from 'components/CarsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCars } from 'redux/cars/operations';\nimport { Message } from 'components/Message';\n\nimport { Loader } from 'components/Loader';\nimport { Container } from 'layout/Layout.styled';\n\nexport default function Favorites() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n\n  const cars = useSelector(state => state.cars.items);\n  const isLoading = useSelector(state => state.cars.isLoading);\n  const favorites = useSelector(state => state.favorites.items);\n\n  let filterCars = [];\n  filterCars = cars.filter(car => favorites.includes(car.id));\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n\n      {filterCars.length !== 0 && <CarsList cars={filterCars} />}\n\n      {filterCars.length === 0 && !isLoading && (\n        <Message\n          title=\"No favorite cars\"\n          content=\"You haven't added any cars to your favorites yet.\"\n        />\n      )}\n    </Container>\n  );\n}\n"],"names":["Container","styled","Text","Title","Catalog","Link","Message","title","content","to","Favorites","dispatch","useDispatch","useEffect","fetchCars","filterCars","cars","useSelector","state","items","isLoading","favorites","filter","car","includes","id","Loader","length","CarsList"],"sourceRoot":""}